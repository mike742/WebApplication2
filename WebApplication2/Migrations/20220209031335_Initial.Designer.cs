// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Data;

namespace WebApplication2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220209031335_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("WebApplication2.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .HasColumnType("longtext");

                    b.Property<string>("CourseNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 101,
                            CourseName = "Java Script",
                            CourseNumber = "orJS_2022",
                            Description = "Java Script course"
                        },
                        new
                        {
                            CourseId = 102,
                            CourseName = "C#",
                            CourseNumber = "orCS_2022",
                            Description = "C# course"
                        },
                        new
                        {
                            CourseId = 103,
                            CourseName = "Python",
                            CourseNumber = "orPy_2022",
                            Description = "Python course"
                        },
                        new
                        {
                            CourseId = 104,
                            CourseName = "Type Script",
                            CourseNumber = "orTS_2022",
                            Description = "Type Script course"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.HasKey("InstructorId");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            InstructorId = 1,
                            CourseId = 101,
                            EmailAddress = "john@yahoo.com",
                            FirstName = "John",
                            LastName = "Smith"
                        },
                        new
                        {
                            InstructorId = 2,
                            CourseId = 102,
                            EmailAddress = "bill@yahoo.com",
                            FirstName = "Bill",
                            LastName = "O'hara"
                        },
                        new
                        {
                            InstructorId = 3,
                            CourseId = 103,
                            EmailAddress = "sara@yahoo.com",
                            FirstName = "Sara",
                            LastName = "Brown"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.HasKey("StudentId");

                    b.HasIndex("CourseId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 201,
                            CourseId = 101,
                            EmailAddress = "",
                            FirstName = "Mark",
                            LastName = "Larson",
                            PhoneNumber = "204 123-4567"
                        },
                        new
                        {
                            StudentId = 202,
                            CourseId = 101,
                            EmailAddress = "",
                            FirstName = "Mary",
                            LastName = "Doe",
                            PhoneNumber = "204 123-4568"
                        },
                        new
                        {
                            StudentId = 203,
                            CourseId = 101,
                            EmailAddress = "",
                            FirstName = "Bob",
                            LastName = "Gibson",
                            PhoneNumber = "204 123-4569"
                        },
                        new
                        {
                            StudentId = 204,
                            CourseId = 102,
                            EmailAddress = "",
                            FirstName = "Tracy",
                            LastName = "Fender",
                            PhoneNumber = "204 123-4570"
                        },
                        new
                        {
                            StudentId = 205,
                            CourseId = 102,
                            EmailAddress = "",
                            FirstName = "Ashly",
                            LastName = "Paul",
                            PhoneNumber = "204 123-4571"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Student", b =>
                {
                    b.HasOne("WebApplication2.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });
#pragma warning restore 612, 618
        }
    }
}
